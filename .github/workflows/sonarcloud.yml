name: SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sonar:
    runs-on: ubuntu-latest
    # Skip if secrets are not available (e.g., in forks)
    if: ${{ secrets.SONAR_TOKEN != '' }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies and run tests
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
        pip install pytest pytest-cov
        # Run tests with coverage for SonarCloud
        if find . -name "*.py" -not -path "./.git/*" | grep -q .; then
          python -m pytest --cov=. --cov-report=xml || echo "Tests failed or no tests found"
          if [ ! -f coverage.xml ]; then
            echo '<?xml version="1.0" ?><coverage><packages></packages></coverage>' > coverage.xml
          fi
        fi

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY || 'jacksonchami117-ui_F.R.I.D.A.Y' }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION || 'jacksonchami117-ui' }}
          -Dsonar.python.coverage.reportPaths=coverage.xml