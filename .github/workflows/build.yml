name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install dependencies if requirements files exist
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        
    - name: Lint with flake8 (if available)
      run: |
        # Install and run flake8 if Python files exist
        if find . -name "*.py" -not -path "./.git/*" | grep -q .; then
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        else
          echo "No Python files found to lint"
        fi

    - name: Check Python syntax
      run: |
        # Check Python syntax on all .py files
        if find . -name "*.py" -not -path "./.git/*" | grep -q .; then
          python -m py_compile $(find . -name "*.py" -not -path "./.git/*")
        else
          echo "No Python files found to check"
        fi

    - name: Validate JSON files
      run: |
        # Validate all JSON files
        for file in $(find . -name "*.json" -not -path "./.git/*"); do
          echo "Validating $file"
          python -m json.tool "$file" > /dev/null
        done

    - name: Check YAML files
      run: |
        # Install and check YAML files if they exist
        if find . -name "*.yml" -o -name "*.yaml" | grep -q .; then
          pip install pyyaml
          for file in $(find . -name "*.yml" -o -name "*.yaml" | grep -v ".git"); do
            echo "Validating $file"
            python -c "import yaml; yaml.safe_load(open('$file'))"
          done
        else
          echo "No YAML files found to check"
        fi

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-